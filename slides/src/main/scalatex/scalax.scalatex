@import com.geirsson.reavealjs.RevealJs._

@def selfSlides = a(href:="https://geirsson.com/assets/scalax-2016/#/", "geirsson.com/assets/scalax-2016")
@def twitter = a(href:="https://twitter.com/olafurpg", "@olafurpg")

@slide
  @h1
    scalafix
  @p
    Smooth migrations to Dotty
  @p
    - Ólafur Geirsson, @twitter
  @p
    @img(style := "border: none; width: 15%; box-shadow: none;", src:="img/scalacenter.png")
@slide
  @h1
    scalafix
  @p
    Refactoring tools for everyone!
  @p
    - Ólafur Geirsson, @twitter
  @p
    @img(style := "border: none; width: 15%; box-shadow: none;", src:="img/scalacenter.png")
@slide
  @h2
    About me
  @ul
    @li
      Recent Master's at EPFL
    @li
      65% at Scala Center
    @li
      35% experimenting with own stuff
@slide
  @h2
    scalafmt
  @p
    @img(src:="img/scalafmt-diff.png")
@slide
  @h2
    scalaf@s{mt}ix
  @p
    @img(src:="img/scalafix-diff.png")
@slide
  @h2
    Agenda
  @ol
    @li
      Motivation
    @li
      Demo
    @li
      How it works
@slide
  @h1
    1. Why?
@slide
  @h2
    Move fast and break things
@slide
  @h2
    Move fast and @s{break}automatically refactor things
@slide
  @h2
    any2stringadd
  @p
    @img(src:="img/any2stringadd.png")
@slide
  @h2
    language.postfixOps
  @p
    @img(src:="img/postfix.png")
@slide
  @h2
    Xor => Either
  @p
    @img(src:="img/xor.png")
@slide
  @h2
    Dotty
  @ul
    @li
      Union/Intersection types
    @li
      Implicit function types
    @li
      ...
@slide
  @h2
    Dotty experimental++
  @ul
    @li
      First-class HList
    @li
      Effect systems
    @li
      Predicate qualified types
    @li
      ...
@slide
  @h2
    2. scalafix demo
  @comment
    - Run on slick, see diff in:
      slick/src/main/scala/slick/lifted/ExtensionMethods.scala
@slide
  @h2
    Implemented rewrites
  @ul
    @li
      @code{ExplicitImplicit*}
    @li
      @code{ProcedureSyntax}
    @li
      @code{VolatileLazyVal}
@slide
  @h2
    Potential rewrites
  @ul
    @li
      Organize imports
    @li
      Rename identifier
    @li
      Move class
@slide
  @h2
    Compared with intellij-scala
  @ul
    @li
      More integrations: cli, sbt, ci server, ...
    @li
      Accurate types
    @li
      Scalability
    @li
      @(`class`:="fragment")
      I'm excited to see IntelliJ @lnk("Migrators API", "???").
@slide
  @h2
    3. How does scalafix work?
@slide
  @h2
    scalafix ♥️ scala.meta
  @p
    @img(width:="80%", src:="img/scalameta-sketch.jpg")
@slide
  @h2
    Semantic API
  @hl.scala
    trait SemanticApi {
      /** Returns type annotation for given val/def. */
      def typeSignature(defn: m.Defn): Option[m.Type]
    }
@slide
  @h2
    Rewrite
  @hl.scala
    abstract class Rewrite {
      def rewrite(code: m.Tree, ctx: RewriteCtx): Seq[Patch]
    }
@slide
  @h2
    ExplicitImplicit
  @hl.scala
    (code: m.Tree).transform {
      case t @@ q"..$mods implicit val $name: ${None} = $body" =>
        val inferredType = ctx.semanaticApi.typeSignature(t)
        q"..$mods implicit val $name: $inferredType = $body"
    }
@slide
  @h2
    Challenge 1: pretty types
  @p
    @img(src:="img/pretty-types.png")
@slide
  @h2
    Challenge 2: formatting
  @p
    @img(width:="70%", src:="img/slick-fmt.png")
  @p
    @(`class`:="fragment")
    Maybe scalafmt can help :)
@slide
  @h2
  @blockquote
    @(`class`:="solarized")
    @(style := "background: #fdf6e3; background-color: #fdf6e3;")
    "If you transform Scala sources, you will break
     someone's hard earned vertical alignment." @br
    @p
      -- me
  @p
    @(`class`:="fragment")
    @img(width:="70%", src:="img/valign.png")

@slide
  @h2
    Future ideas
  @ul
    @li
      IDE integration
    @li
      Library migrations
    @li
      Code search
    @li
      Code review bots
    @li
      Your idea idea...
@slide
  @h2
    Summary
  @ul
    @li
      Move fast and automatically refactor things
    @li
      New approach: scala.meta
    @li

@slide
  @(style := "text-align: left;")
  @h1
    THANK YOU
  @p
      - Visit documentation: @a(href:="https://scalacenter.github.io/scalafix/", "scalacenter.github.io/scalafix") @br
      - See slides: @selfSlides @br
      - @a(href:="http://github.com/scalacenter/scalafix", "Contribute with ideas, reporting issues and PRs.") @br
      - @a(href:="http://twitter.com/olafurpg", "Follow @olafurpg on Twitter.") @br
      - @a(href:="https://gitter.im/scalacenter/scalafix", "Chat on Gitter.") @br
